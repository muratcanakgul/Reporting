@page "/report"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Collections.Generic
@using System.Threading.Tasks
@inject IHttpClientFactory HttpClientFactory

<h3>Dynamic Report</h3>

<div>
    <label>Product Name: </label>
    <input @bind="ProductName" placeholder="Product Name" />
</div>
<div>
    <label>Start Date: </label>
    <input type="date" @bind="StartDate" />
</div>
<div>
    <label>End Date: </label>
    <input type="date" @bind="EndDate" />
</div>
<div>
    <button @onclick="GetReport">Get Report</button>
</div>

@if (Results != null && Results.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                @foreach (var key in Results[0].Keys)
                {
                    <th>@key</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var row in Results)
            {
                <tr>
                    @foreach (var cell in row.Values)
                    {
                        <td>@cell</td>
                    }
                </tr>
            }
        </tbody>
    </table>
}
else if (Results != null)
{
    <p>No data found.</p>
}

@code {
    // Filtre property’leri
    string ProductName;
    DateTime? StartDate { get; set; }
    DateTime? EndDate { get; set; }
    List<Dictionary<string, object>> Results = null;

    // API request modelleri
    public class ReportFilter
    {
        public string Field { get; set; }
        public string Operator { get; set; }
        public object Value { get; set; }
    }
    public class FilteredReportRequest
    {
        public string ReportType { get; set; }
        public List<ReportFilter> Filters { get; set; }
        public int Page { get; set; }
        public int PageSize { get; set; }
    }
    public class ReportResponse
    {
        public List<Dictionary<string, object>> Data { get; set; }
        public int TotalCount { get; set; }
    }

    async Task GetReport()
    {
        var request = new FilteredReportRequest
        {
            ReportType = "Sales",
            Filters = new List<ReportFilter>(),
            Page = 1,
            PageSize = 100
        };

        if (!string.IsNullOrWhiteSpace(ProductName))
            request.Filters.Add(new ReportFilter { Field = "ProductName", Operator = "LIKE", Value = ProductName });

        if (StartDate.HasValue)
            request.Filters.Add(new ReportFilter { Field = "SaleDate", Operator = ">=", Value = StartDate.Value.ToString("yyyy-MM-dd") });

        if (EndDate.HasValue)
            request.Filters.Add(new ReportFilter { Field = "SaleDate", Operator = "<=", Value = EndDate.Value.ToString("yyyy-MM-dd") });

        Results = null;

        var httpClient = HttpClientFactory.CreateClient("ReportingAPI"); // Startup.cs'de BaseAddress ayarladığını varsayarak
        var response = await httpClient.PostAsJsonAsync("api/report/filtered", request);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<ReportResponse>();
            Results = result.Data;
        }
        else
        {
            Results = new List<Dictionary<string, object>>();
        }
    }
}
